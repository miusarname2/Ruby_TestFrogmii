<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
    <style>
      @import url('https://fonts.googleapis.com/css?family=Karla:400,700&display=swap');
    </style>
    <%= stylesheet_link_tag 'indexes' %>
  </head>
  <body>
    <div id="root"></div>
    <%= javascript_include_tag 'indexes' %>
    <script>
        // Función para obtener el valor de una cookie por su nombre
        function getCookie(nombreCookie) {
            // Separar las cookies en un array
            var cookies = document.cookie.split(';');
            
            // Iterar sobre cada cookie para encontrar la que coincide con el nombre
            for(var i = 0; i < cookies.length; i++) {
                var cookie = cookies[i].trim();
                // Verificar si la cookie comienza con el nombre buscado
                if (cookie.startsWith(nombreCookie + '=')) {
                    // Obtener el valor de la cookie y devolverlo
                    return cookie.substring(nombreCookie.length + 1);
                }
            }
            // Si no se encuentra la cookie, devolver null
            return null;
        }

        // Función para actualizar el valor de una cookie
        function actualizarCookie(nombreCookie, nuevoValor) {
            // Calcular la fecha de expiración en 5 segundos
            var fechaExpiracion = new Date();
            fechaExpiracion.setTime(fechaExpiracion.getTime() + 1000); // 5000 milisegundos = 5 segundos
            // Formatear la fecha de expiración en formato UTC
            var fechaExpiracionUTC = fechaExpiracion.toUTCString();
            // Actualizar la cookie con el nuevo valor y fecha de expiración
            document.cookie = nombreCookie + "=" + nuevoValor + "; expires=" + fechaExpiracionUTC + "; path=/";
        }

        // Obtener el valor actual de la cookie "contador"
        var valorContador = getCookie('contador');

        if (valorContador === null) {
            // Si la cookie no existe, establecer el contador en 1
            actualizarCookie('contador', '1');
            console.log('La cookie "contador" se ha creado con valor 1.');
            location.reload();
        } else {
            // Si la cookie existe, convertir su valor a número, sumarle 1 y actualizar la cookie
            var nuevoValor = parseInt(valorContador) + 1;
            actualizarCookie('contador', nuevoValor.toString());
            console.log('El valor de la cookie "contador" se ha incrementado a ' + nuevoValor + '.');
        }

    </script>
    <!-- Font Awesome -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/js/all.min.js" integrity="sha256-KzZiKy0DWYsnwMF+X1DvQngQ2/FxF7MF3Ff72XcpuPs=" crossorigin="anonymous"></script>
    <!-- ChartJS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js" integrity="sha256-R4pqcOYV8lt7snxMQO/HSbVCFRPMdrhAFMH+vr9giYI=" crossorigin="anonymous"></script>
    <script>
            var chartOne = document.getElementById('chartOne');
            var myChart = new Chart(chartOne, {
                type: 'bar',
                data: {
                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                    datasets: [{
                        label: '# of Votes',
                        data: [12, 19, 3, 5, 2, 3],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
    
            var chartTwo = document.getElementById('chartTwo');
            var myLineChart = new Chart(chartTwo, {
                type: 'line',
                data: {
                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                    datasets: [{
                        label: '# of Votes',
                        data: [12, 19, 3, 5, 2, 3],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
    </script>
  </body>
</html>
